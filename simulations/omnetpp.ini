[General]
record-eventlog = true
eventlog-file = out/logF.elog
sim-time-limit = ${simHours=4}h
num-rngs = 5 #Random Number Generators: omnet will associate a set of seed to each RNG that we have defined
seed-set = 0 #Use the same seed-set for all simulations
tkenv-plugin-path = ../../../etc/plugins
repeat = 1  #Each configuration set must be run only once




########################################
[Config AMoD_Network]
description = Autonomous Mobility on Demand Simulator
network = AMoD
 
#######################################
#Node's TRIP REQUEST SUBMITTER Configuration
#######################################
**.n[*].trsubmitter.passengersPerRequest = intuniform(1, 1, 1)  #Number of passengers per request
#**.n[*].trsubmitter.maxDelay = ${maxdelay=5,10,20}minute                          #Max delay per request allowed
**.n[*].trsubmitter.maxDelay = ${maxdelay=15}minute                          #Max delay per request allowed
#**.n[*].trsubmitter.sendIaTime = exponential(${iatime=228, 114, 5}minute, 0)       #interArrivalTime; the second argument specifies the number of the RNG chosen
#**.n[*].trsubmitter.sendIaTime = exponential(${iatime=28,56,80,110}minute, 0)       #interArrivalTime; the second argument specifies the number of the RNG chosen
**.n[*].trsubmitter.sendIaTime = exponential(${iatime= 56}minute, 0)
**.n[*].trsubmitter.destAddresses = 900                         #Destination addresses range
**.n[*].trsubmitter.maxSubmissionTime = -1h                      #Max request submission time

**.n[*].routingType = "Routing"						#Routing Type allowed: "ManhattanRouting" - "Routing"
#**.n[*].isRequestGenerator = true
**.minTripLength = 1600m
#**.n[*].isRequestGenerator = false								#Specify if the node generates trip requests


#######################################
#Node's Application Level Configuration
#######################################
**.n[*].appType = "App"											#Node's application level type (only "App" allowed)


#########################
# Network Parameters
#########################
*.boardingTime = 5s												#Time needed for boarding a passenger
*.alightingTime = 10s											#Time needed for alighting a passenger

#*.netmanager.numberOfVehicles = ${vehicles= 500,1000,1500}	
				#Number of vehicles in the network

*.netmanager.numberOfVehicles = ${vehicles= 500}					#Number of vehicles in the network

**.n[*].app.seatsPerVehicle = ${seatsPerVehicle= 4}               #Seats per vehicle
*.netmanagerType = "AdaptiveNetworkManager"                    #NetworkManager type. Allowed are: "ManhattanNetworkManager" - "AdaptiveNetworkManager"
#*.netmanager.onlineRouting = true								#Specify if use onlineRouting (allowed only for AdaptiveNetworkManager)




*.tcoord.requestAssignmentStrategy = 1
*.coordType = "HeuristicCoord"								#Coordinator type. Allowed are: "HeuristicCoord" - "RadioTaxiCoord"

*.speed = 35kmph												#The velocity of each vehicle
*.acceleration = 1.676mpss
*.xNodeDistance = 200m									    #Distance between crossroads on x axes
*.yNodeDistance = 200m											#Distance between crossroads on y axes
*.height = 30												#Number of crossroads on y axes
*.width = 30	                                        #Number of crossroads on x axes

#*.riskZoneExp = ${riskZoneExp=0,1,3,7}	
*.riskZoneExp = ${riskZoneExp=7}									    	# Zone with roads crumbled
*.maxNumDroppedChannels=${maxNumDroppedChannels= 10, 20, 40, 80}
#*.maxNumDroppedChannels=${maxNumDroppedChannels= 20}
#*.dropChRate = ${dropChRate=1000,500,250,100}
result-dir = results/simHours-${simHours}/coordType-Heuristic/maxDelay-${maxdelay}/vehicles-${vehicles}/seats-${seatsPerVehicle}/sendIaTime-${iatime}/maxNumDroppedChannels-${maxNumDroppedChannels}/riskZoneExp-${riskZoneExp}
#result-dir = results/simHours-${simHours}/coordType-Heuristic/maxDelay-${maxdelay}/vehicles-${vehicles}/seats-${seatsPerVehicle}/sendIaTime-${iatime}/dropChRate-${dropChRate}/riskZoneExp-${riskZoneExp}
